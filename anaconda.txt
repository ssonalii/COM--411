1.	Write a C++ Program to display Names, Roll No., and grades of 3 students who have appeared in the examination. Declare the class of name, Roll No. and grade. Create an array of class objects. Read and display the contents of the array.

#include <iostream>
using namespace std;
class student
{
    char name[50];
    int rollno;
    int total;
    public: 
    void readDetails(void); //member function to get student details 
    void gradeCal(void); //member function to display Grade 
    void printDetails(void); // member function to print student details
    };
    //member function definition outside the class 
    void student::readDetails(void)
    {
        cout<<"Enter Name: ";
        cin>>name;
        cout<<"\n Enter Roll no: ";
        cin>>rollno;
        cout<<"\n Enter total marks out of 500: ";
        cin>>total;
         
} 
void student::gradeCal(void)
{
    float percentage;
    percentage=(float)total/500.00*100.00;
    cout<<percentage<<"%\n";
    if(percentage>=75.00)
    {
        cout<<"Grade: A \n";
        
    }
    else
    { 
        if((percentage>=60.00)&&(percentage<75.00))
        {
            cout<<"Grade: B \n";
            
        }
        else
        {
            if((percentage>=40.00)&&(percentage<60.00))
            {
                cout<<"Grade: C \n";}
                else
                {
                    cout<<"Grade: D \n";}
            
        }}
    
}//member function definition outside the class 
void student::printDetails(void)
{
    cout<<"Student Details: \n";
    cout<<"Name: "<<name<<endl;
    cout<<"Rollnumber "<<rollno<<endl;
    cout<<"Total: "<<total<<endl;
    
}
 
int main()
{
    student std[10]; //array of objects creation
int n, i;
cout<<"Enter total number of students:";
cin>>n;
for(i=0; i<n; i++)
{
    cout<<"Enter details of student "<<i+1<<"\n";
    std[i].readDetails();
    
}
for(i=0; i<n; i++)
{
cout<<"Details of student "<<i+1<<"\n";
std[i].printDetails();
std[i].gradeCal();
    
}
return 0;
}

2.	Create a class student having data members to store roll no., name, name of 3 subjects, max marks, min marks, obtain marks. Declare an array of object to input data of 3 students. Provide facilities to display result of all students with percentage.

// C++ program to create student class, read and print N student's details
// (Example of array of objects)
#include <iostream>
using namespace std;
#define MAX 10
class student {
private:
    char name[30];
    int rollNo;
    int total;
    float perc;
public:
    //member function to get student's details
    void getDetails(void);
    //member function to print student's details
    void putDetails(void);
};
//member function definition, outside of the class
void student::getDetails(void)
{
    cout << "Enter name: ";
    cin >> name;
    cout << "Enter roll number: ";
    cin >> rollNo;
    cout << "Enter total marks outof 500: ";
    cin >> total;
    perc = (float)total / 500 * 100;
}
//member function definition, outside of the class
void student::putDetails(void)
{
    cout << "Student details:\n";
    cout << "Name:" << name << ",Roll Number:" << rollNo << ",Total:" << total << ",Percentage:" << perc;
}
int main()
{
    student std[MAX]; //array of objects creation
    int n, loop;
    cout << "Enter total number of students: ";
    cin >> n;
    for (loop = 0; loop < n; loop++) {
        cout << "Enter details of student " << loop + 1 << ":\n";
        std[loop].getDetails();
    }
    cout << endl;
    for (loop = 0; loop < n; loop++) {
        cout << "Details of student " << (loop + 1) << ":\n";
        std[loop].putDetails();
    }
    return 0;
}

3.	Create a class EMPLOYEE given that it contains following members: data members: Employee number, Employee name, Basic, DA, IT, Net Salary and print data members. Calculate the net salary.

#include <iostream>
using namespace std;
class employee
{
	int   emp_number;
	char  emp_name[20];
	float emp_basic;
	float emp_da;
	float emp_it;
	float emp_net_sal;
	public:
		void get_emp_details();
		float find_net_salary(float basic, float da, float it);
		void show_emp_details();
};
void employee :: get_emp_details()
{
	cout<<"\nEnter employee number: ";
	cin>>emp_number;
	cout<<"\nEnter employee name: ";
	cin>>emp_name;
	cout<<"\nEnter employee basic: ";
	cin>>emp_basic;
	cout<<"\nEnter employee DA: ";
	cin>>emp_da;
	cout<<"\nEnter employee IT: ";
	cin>>emp_it;
}
float employee :: find_net_salary(float basic, float da, float it)
{
    return (basic+da)-it;
}
void employee :: show_emp_details()
{
	cout<<"\n\n**** Details of  Employee ****";
	cout<<"\nEmployee Name      :  "<<emp_name;
	cout<<"\nEmployee number    :  "<<emp_number;
	cout<<"\nBasic salary       :  "<<emp_basic;
	cout<<"\nEmployee DA        :  "<<emp_da;
	cout<<"\nIncome Tax         :  "<<emp_it;
	cout<<"\nNet Salary         :  "<<find_net_salary(emp_basic, emp_da, emp_it);
	cout<<"\n-------------------------------\n\n";
}
int main()
{
    employee emp;
    emp.get_emp_details();
    emp.show_emp_details();
    return 0;
}

4.	Write program-using class and to store data about books(book id,Title,Author,Price,Edition) provide following facilities :Addition and displaying of new books.
